(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{208:function(t,i,a){"use strict";a.r(i);var r=a(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,i=t.$createElement,a=t._self._c||i;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"swift-oc混编"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swift-oc混编","aria-hidden":"true"}},[t._v("#")]),t._v(" swift oc混编")]),t._v(" "),a("h3",{attrs:{id:"先介绍下背景，公司各bu都拆成-a依赖。所以在混编swift的时候遇到一小点问题，今天记录下。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先介绍下背景，公司各bu都拆成-a依赖。所以在混编swift的时候遇到一小点问题，今天记录下。","aria-hidden":"true"}},[t._v("#")]),t._v(" 先介绍下背景，公司各bu都拆成.a依赖。所以在混编swift的时候遇到一小点问题，今天记录下。")]),t._v(" "),a("h3",{attrs:{id:"library-search-paths加上-toolchain-dir-usr-lib-swift-platform-name-，不然会遇到swift-library-link不到的情况。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#library-search-paths加上-toolchain-dir-usr-lib-swift-platform-name-，不然会遇到swift-library-link不到的情况。","aria-hidden":"true"}},[t._v("#")]),t._v(" Library Search Paths加上 $(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)，不然会遇到swift library link不到的情况。")]),t._v(" "),a("h3",{attrs:{id:"runpath-search-paths加了-usr-lib-swift-不然启动时会崩溃"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runpath-search-paths加了-usr-lib-swift-不然启动时会崩溃","aria-hidden":"true"}},[t._v("#")]),t._v(" Runpath Search Paths加了/usr/lib/swift,不然启动时会崩溃")]),t._v(" "),a("h3",{attrs:{id:"此外，我还尝试了新建一个默认语言为oc的-a作为bundle加入到主工程依赖，然后oc-bundle进行调用。在加入swift代码的时候，会提示新建一个bridge文件，同时工程会隐式新建一个xxx-swift-h。-如果在一个工程内，那么直接import这个头文件没问题。但是我在其他的oc-bundle直接引用，在编译时候就会报错，提示xxxx-swift-h找不到。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#此外，我还尝试了新建一个默认语言为oc的-a作为bundle加入到主工程依赖，然后oc-bundle进行调用。在加入swift代码的时候，会提示新建一个bridge文件，同时工程会隐式新建一个xxx-swift-h。-如果在一个工程内，那么直接import这个头文件没问题。但是我在其他的oc-bundle直接引用，在编译时候就会报错，提示xxxx-swift-h找不到。","aria-hidden":"true"}},[t._v("#")]),t._v(" 此外，我还尝试了新建一个默认语言为oc的.a作为bundle加入到主工程依赖，然后oc bundle进行调用。在加入swift代码的时候，会提示新建一个bridge文件，同时工程会隐式新建一个xxx-swift.h。 如果在一个工程内，那么直接import这个头文件没问题。但是我在其他的oc bundle直接引用，在编译时候就会报错，提示xxxx-swift.h找不到。")]),t._v(" "),a("h3",{attrs:{id:"找到方案是swift的bundle加入script在build的时候将xxx-swift-h-copy到根目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到方案是swift的bundle加入script在build的时候将xxx-swift-h-copy到根目录","aria-hidden":"true"}},[t._v("#")]),t._v(" 找到方案是swift的bundle加入script在build的时候将xxx-swift.h copy到根目录")]),t._v(" "),a("p",[a("code",[t._v("target_dir=${BUILT_PRODUCTS_DIR}/include/${PRODUCT_MODULE_NAME}/ mkdir -p ${target_dir} cp ${DERIVED_SOURCES_DIR}/*-Swift.h ${target_dir}")]),t._v("(xcode 11改为../*-Swift-5.0.h ${target_dir} )")]),t._v(" "),a("h3",{attrs:{id:"同时要将此bundle的define-moudle设为yes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同时要将此bundle的define-moudle设为yes","aria-hidden":"true"}},[t._v("#")]),t._v(" 同时要将此bundle的define moudle设为yes")])])}],!1,null,null,null);s.options.__file="swiftWithOC.md";i.default=s.exports}}]);